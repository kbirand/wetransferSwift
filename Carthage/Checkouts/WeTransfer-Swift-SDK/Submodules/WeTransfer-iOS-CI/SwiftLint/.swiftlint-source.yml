# References to Coyote are made in Rabbit, so we can use the same lint-file for both.
disabled_rules: # Rule identifiers to exclude from running
  - line_length # Documentation can exceed line lengths
  - identifier_name
opt_in_rules:
  - empty_count
  - force_unwrapping
  - explicit_init
  - first_where
  - object_literal
  - operator_usage_whitespace
  - overridden_super_call # Not sure if this will cause any problems, let's see.
  - private_outlet
  - prohibited_super_call
  - redundant_nil_coalescing
  - switch_case_on_newline
force_cast: error
force_try: error
force_unwrapping: 
  severity: error
operator_usage_whitespace: error
syntactic_sugar: error
trailing_comma: 
  severity: error
trailing_newline: error
trailing_semicolon: error
trailing_whitespace: error
unused_closure_parameter: error
unused_optional_binding: 
  severity: error
vertical_whitespace: 
  severity: error

object_literal:
  color_literal: false
trailing_whitespace:
  ignores_empty_lines: true # This is such a hassle to do right and adds nothing
  
custom_rules:
  nslog_prohibted: # rule identifier
    included: ".*.swift" # regex that defines paths to include during linting. optional.
    excluded: ".*(Tests|SnapshotHelper|DataTestCase)\\.swift" # regex that defines paths to exclude during linting. optional
    name: "Use Log instead of NSLog, print, OSLog" # rule name. optional.
    regex: 'NSLog|import os.log|print\(' # matching pattern
    message: "Incorrect logging" # violation message. optional.
    severity: warning # violation severity. optional.

excluded:
  # We add ../../../ to work with the way Danger is expanding paths based on the config file.
  - ${SRCROOT}/Carthage
  - ${SRCROOT}/Playgrounds
  - ${SRCROOT}/Submodules
  - ${SRCROOT}/scripts/genstrings.swift
  - ${SRCROOT}/danger/DangerTests.swift
  - ${SRCROOT}/${PROJECT_NAME}Tests
  - ${SRCROOT}/${PROJECT_NAME}UITests